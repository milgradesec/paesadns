name: Docker Build and Push

on:
  push:
    branches: [main]
    # paths:
    #   - "build.Dockerfile"
    #   - "Makefile"
    #   - "plugin.cfg"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.actor }}/coredns
  VERSION: v1.8.6

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      # - name: Install Cosign
      #   uses: sigstore/cosign-installer@v1.3.1

      - name: Install buildx
        uses: docker/setup-buildx-action@v1.6.0

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1.10.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # - name: Build and Push
      #   id: build-and-push
      # run: make

      - name: Build and Push
        uses: docker/build-push-action@v2.7.0
        with:
          file: build.Dockerfile
          build-args: VERSION=${{ env.VERSION }}
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:test

      # Sign the resulting Docker image digest except on PRs and private repos
      # The keyless signing process records signatures on the Rekor public
      # transparency log, so signing is disabled for private repos by default
      # to avoid leaking private data.  If you wish to sign things anyways,
      # then this check can be removed and --force can be added to the cosign
      # command below.
      # https://github.com/sigstore/cosign
      # - name: Sign the published Docker image
      #   env:
      #     COSIGN_EXPERIMENTAL: "true"
      # This step uses the identity token to provision an ephemeral certificate
      # against the sigstore community Fulcio instance, and records it to the
      # sigstore community Rekor transparency log.
      # run: cosign sign ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@${{ steps.build-and-push.outputs.digest }}
